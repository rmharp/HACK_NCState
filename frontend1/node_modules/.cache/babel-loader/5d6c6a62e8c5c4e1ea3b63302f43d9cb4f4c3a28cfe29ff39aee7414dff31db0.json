{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\nimport tunnel from 'tunnel-rat';\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst col = new THREE.Color();\nconst tracked = tunnel();\n\n/**\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\n * information. After `v8.1.0`, position information (`top`, `left`) was added\n *\n * @todo remove this when drei supports v9 and up\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  }\n  // Fall back on old behavior if r3f < 8.1.0\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\nfunction prepareSkissor(state, {\n  left,\n  bottom,\n  width,\n  height\n}) {\n  let autoClear;\n  const aspect = width / height;\n  if (isOrthographicCamera(state.camera)) {\n    if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\n      Object.assign(state.camera, {\n        left: width / -2,\n        right: width / 2,\n        top: height / 2,\n        bottom: height / -2\n      });\n      state.camera.updateProjectionMatrix();\n    }\n  } else if (state.camera.aspect !== aspect) {\n    state.camera.aspect = aspect;\n    state.camera.updateProjectionMatrix();\n  }\n  autoClear = state.gl.autoClear;\n  state.gl.autoClear = false;\n  state.gl.setViewport(left, bottom, width, height);\n  state.gl.setScissor(left, bottom, width, height);\n  state.gl.setScissorTest(true);\n  return autoClear;\n}\nfunction finishSkissor(state, autoClear) {\n  // Restore the default state\n  state.gl.setScissorTest(false);\n  state.gl.autoClear = autoClear;\n}\nfunction clear(state) {\n  state.gl.getClearColor(col);\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\n  state.gl.clear(true, true);\n}\nfunction Container({\n  visible = true,\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const rootState = useThree();\n  const [isOffscreen, setOffscreen] = React.useState(false);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      const {\n        position,\n        isOffscreen: _isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\n      if (visible && !isOffscreen && rect.current) {\n        const autoClear = prepareSkissor(state, position);\n        // When children are present render the portalled scene, otherwise the default scene\n        state.gl.render(children ? state.scene : scene, state.camera);\n        finishSkissor(state, autoClear);\n      }\n    }\n  }, index);\n  React.useLayoutEffect(() => {\n    const curRect = rect.current;\n    if (curRect && (!visible || !isOffscreen)) {\n      // If the view is not visible clear it once, but stop rendering afterwards!\n      const {\n        position\n      } = computeContainerPosition(canvasSize, curRect);\n      const autoClear = prepareSkissor(rootState, position);\n      clear(rootState);\n      finishSkissor(rootState, autoClear);\n    }\n  }, [visible, isOffscreen]);\n  React.useEffect(() => {\n    const curRect = rect.current;\n    // Connect the event layer to the tracking element\n    const old = rootState.get().events.connected;\n    rootState.setEvents({\n      connected: track.current\n    });\n    return () => {\n      if (curRect) {\n        const {\n          position\n        } = computeContainerPosition(canvasSize, curRect);\n        const autoClear = prepareSkissor(rootState, position);\n        clear(rootState);\n        finishSkissor(rootState, autoClear);\n      }\n      rootState.setEvents({\n        connected: old\n      });\n    };\n  }, []);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) return;\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nconst CanvasView = /*#__PURE__*/React.forwardRef(({\n  track,\n  visible = true,\n  index = 1,\n  id,\n  style,\n  className,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const [ready, toggle] = React.useReducer(() => true, false);\n  const compute = React.useCallback((event, state) => {\n    if (rect.current && track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect, track]);\n  React.useEffect(() => {\n    var _track$current2;\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\n    // And now we can proceed\n    toggle();\n  }, [track]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    visible: visible,\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\n      // @ts-ignore\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\n      // @ts-ignore\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\n    }\n  }));\n});\nconst HtmlView = /*#__PURE__*/React.forwardRef(({\n  as: El = 'div',\n  id,\n  visible,\n  className,\n  style,\n  index = 1,\n  track,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  const uuid = React.useId();\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref,\n    id: id,\n    className: className,\n    style: style\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\n    visible: visible,\n    key: uuid,\n    track: ref,\n    frames: frames,\n    index: index\n  }, children)));\n});\nconst View = /*#__PURE__*/React.forwardRef((props, fref) => {\n  // If we're inside a canvas we should be able to access the context store\n  const store = React.useContext(context);\n  // If that's not the case we render a tunnel\n  if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\n    ref: fref\n  }, props));\n  // Otherwise a plain canvas-view\n  else return /*#__PURE__*/React.createElement(CanvasView, _extends({\n    ref: fref\n  }, props));\n});\nView.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\nexport { View };","map":{"version":3,"names":["_extends","React","THREE","context","useThree","createPortal","useFrame","tunnel","isOrthographicCamera","def","col","Color","tracked","isNonLegacyCanvasSize","size","computeContainerPosition","canvasSize","trackRect","right","top","left","trackLeft","bottom","trackBottom","width","height","isOffscreen","canvasBottom","position","prepareSkissor","state","autoClear","aspect","camera","Object","assign","updateProjectionMatrix","gl","setViewport","setScissor","setScissorTest","finishSkissor","clear","getClearColor","setClearColor","getClearAlpha","Container","visible","scene","index","children","frames","rect","track","rootState","setOffscreen","useState","frameCount","Infinity","_track$current","current","getBoundingClientRect","_isOffscreen","render","useLayoutEffect","curRect","useEffect","old","get","events","connected","setEvents","console","warn","createElement","Fragment","CanvasView","forwardRef","id","style","className","props","fref","_rect$current","_rect$current2","_rect$current3","_rect$current4","useRef","virtualScene","Scene","ready","toggle","useReducer","compute","useCallback","event","target","x","clientX","y","clientY","pointer","set","raycaster","setFromCamera","_track$current2","ref","priority","HtmlView","as","El","uuid","useId","useImperativeHandle","In","key","View","store","useContext","Port","Out"],"sources":["/Users/riley/Hack_NCState/frontend/node_modules/@react-three/drei/web/View.js"],"sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as React from 'react';\nimport * as THREE from 'three';\nimport { context, useThree, createPortal, useFrame } from '@react-three/fiber';\nimport tunnel from 'tunnel-rat';\n\nconst isOrthographicCamera = def => def && def.isOrthographicCamera;\nconst col = new THREE.Color();\nconst tracked = tunnel();\n\n/**\n * In `@react-three/fiber` after `v8.0.0` but prior to `v8.1.0`, `state.size` contained only dimension\n * information. After `v8.1.0`, position information (`top`, `left`) was added\n *\n * @todo remove this when drei supports v9 and up\n */\n\nfunction isNonLegacyCanvasSize(size) {\n  return 'top' in size;\n}\nfunction computeContainerPosition(canvasSize, trackRect) {\n  const {\n    right,\n    top,\n    left: trackLeft,\n    bottom: trackBottom,\n    width,\n    height\n  } = trackRect;\n  const isOffscreen = trackRect.bottom < 0 || top > canvasSize.height || right < 0 || trackRect.left > canvasSize.width;\n  if (isNonLegacyCanvasSize(canvasSize)) {\n    const canvasBottom = canvasSize.top + canvasSize.height;\n    const bottom = canvasBottom - trackBottom;\n    const left = trackLeft - canvasSize.left;\n    return {\n      position: {\n        width,\n        height,\n        left,\n        top,\n        bottom,\n        right\n      },\n      isOffscreen\n    };\n  }\n  // Fall back on old behavior if r3f < 8.1.0\n  const bottom = canvasSize.height - trackBottom;\n  return {\n    position: {\n      width,\n      height,\n      top,\n      left: trackLeft,\n      bottom,\n      right\n    },\n    isOffscreen\n  };\n}\nfunction prepareSkissor(state, {\n  left,\n  bottom,\n  width,\n  height\n}) {\n  let autoClear;\n  const aspect = width / height;\n  if (isOrthographicCamera(state.camera)) {\n    if (state.camera.left !== width / -2 || state.camera.right !== width / 2 || state.camera.top !== height / 2 || state.camera.bottom !== height / -2) {\n      Object.assign(state.camera, {\n        left: width / -2,\n        right: width / 2,\n        top: height / 2,\n        bottom: height / -2\n      });\n      state.camera.updateProjectionMatrix();\n    }\n  } else if (state.camera.aspect !== aspect) {\n    state.camera.aspect = aspect;\n    state.camera.updateProjectionMatrix();\n  }\n  autoClear = state.gl.autoClear;\n  state.gl.autoClear = false;\n  state.gl.setViewport(left, bottom, width, height);\n  state.gl.setScissor(left, bottom, width, height);\n  state.gl.setScissorTest(true);\n  return autoClear;\n}\nfunction finishSkissor(state, autoClear) {\n  // Restore the default state\n  state.gl.setScissorTest(false);\n  state.gl.autoClear = autoClear;\n}\nfunction clear(state) {\n  state.gl.getClearColor(col);\n  state.gl.setClearColor(col, state.gl.getClearAlpha());\n  state.gl.clear(true, true);\n}\nfunction Container({\n  visible = true,\n  canvasSize,\n  scene,\n  index,\n  children,\n  frames,\n  rect,\n  track\n}) {\n  const rootState = useThree();\n  const [isOffscreen, setOffscreen] = React.useState(false);\n  let frameCount = 0;\n  useFrame(state => {\n    if (frames === Infinity || frameCount <= frames) {\n      var _track$current;\n      rect.current = (_track$current = track.current) == null ? void 0 : _track$current.getBoundingClientRect();\n      frameCount++;\n    }\n    if (rect.current) {\n      const {\n        position,\n        isOffscreen: _isOffscreen\n      } = computeContainerPosition(canvasSize, rect.current);\n      if (isOffscreen !== _isOffscreen) setOffscreen(_isOffscreen);\n      if (visible && !isOffscreen && rect.current) {\n        const autoClear = prepareSkissor(state, position);\n        // When children are present render the portalled scene, otherwise the default scene\n        state.gl.render(children ? state.scene : scene, state.camera);\n        finishSkissor(state, autoClear);\n      }\n    }\n  }, index);\n  React.useLayoutEffect(() => {\n    const curRect = rect.current;\n    if (curRect && (!visible || !isOffscreen)) {\n      // If the view is not visible clear it once, but stop rendering afterwards!\n      const {\n        position\n      } = computeContainerPosition(canvasSize, curRect);\n      const autoClear = prepareSkissor(rootState, position);\n      clear(rootState);\n      finishSkissor(rootState, autoClear);\n    }\n  }, [visible, isOffscreen]);\n  React.useEffect(() => {\n    const curRect = rect.current;\n    // Connect the event layer to the tracking element\n    const old = rootState.get().events.connected;\n    rootState.setEvents({\n      connected: track.current\n    });\n    return () => {\n      if (curRect) {\n        const {\n          position\n        } = computeContainerPosition(canvasSize, curRect);\n        const autoClear = prepareSkissor(rootState, position);\n        clear(rootState);\n        finishSkissor(rootState, autoClear);\n      }\n      rootState.setEvents({\n        connected: old\n      });\n    };\n  }, []);\n  React.useEffect(() => {\n    if (isNonLegacyCanvasSize(canvasSize)) return;\n    console.warn('Detected @react-three/fiber canvas size does not include position information. <View /> may not work as expected. ' + 'Upgrade to @react-three/fiber ^8.1.0 for support.\\n See https://github.com/pmndrs/drei/issues/944');\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, children);\n}\nconst CanvasView = /*#__PURE__*/React.forwardRef(({\n  track,\n  visible = true,\n  index = 1,\n  id,\n  style,\n  className,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  var _rect$current, _rect$current2, _rect$current3, _rect$current4;\n  const rect = React.useRef(null);\n  const {\n    size,\n    scene\n  } = useThree();\n  const [virtualScene] = React.useState(() => new THREE.Scene());\n  const [ready, toggle] = React.useReducer(() => true, false);\n  const compute = React.useCallback((event, state) => {\n    if (rect.current && track.current && event.target === track.current) {\n      const {\n        width,\n        height,\n        left,\n        top\n      } = rect.current;\n      const x = event.clientX - left;\n      const y = event.clientY - top;\n      state.pointer.set(x / width * 2 - 1, -(y / height) * 2 + 1);\n      state.raycaster.setFromCamera(state.pointer, state.camera);\n    }\n  }, [rect, track]);\n  React.useEffect(() => {\n    var _track$current2;\n    // We need the tracking elements bounds beforehand in order to inject it into the portal\n    rect.current = (_track$current2 = track.current) == null ? void 0 : _track$current2.getBoundingClientRect();\n    // And now we can proceed\n    toggle();\n  }, [track]);\n  return /*#__PURE__*/React.createElement(\"group\", _extends({\n    ref: fref\n  }, props), ready && createPortal( /*#__PURE__*/React.createElement(Container, {\n    visible: visible,\n    canvasSize: size,\n    frames: frames,\n    scene: scene,\n    track: track,\n    rect: rect,\n    index: index\n  }, children), virtualScene, {\n    events: {\n      compute,\n      priority: index\n    },\n    size: {\n      width: (_rect$current = rect.current) == null ? void 0 : _rect$current.width,\n      height: (_rect$current2 = rect.current) == null ? void 0 : _rect$current2.height,\n      // @ts-ignore\n      top: (_rect$current3 = rect.current) == null ? void 0 : _rect$current3.top,\n      // @ts-ignore\n      left: (_rect$current4 = rect.current) == null ? void 0 : _rect$current4.left\n    }\n  }));\n});\nconst HtmlView = /*#__PURE__*/React.forwardRef(({\n  as: El = 'div',\n  id,\n  visible,\n  className,\n  style,\n  index = 1,\n  track,\n  frames = Infinity,\n  children,\n  ...props\n}, fref) => {\n  const uuid = React.useId();\n  const ref = React.useRef(null);\n  React.useImperativeHandle(fref, () => ref.current);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(El, _extends({\n    ref: ref,\n    id: id,\n    className: className,\n    style: style\n  }, props)), /*#__PURE__*/React.createElement(tracked.In, null, /*#__PURE__*/React.createElement(CanvasView, {\n    visible: visible,\n    key: uuid,\n    track: ref,\n    frames: frames,\n    index: index\n  }, children)));\n});\nconst View = /*#__PURE__*/React.forwardRef((props, fref) => {\n  // If we're inside a canvas we should be able to access the context store\n  const store = React.useContext(context);\n  // If that's not the case we render a tunnel\n  if (!store) return /*#__PURE__*/React.createElement(HtmlView, _extends({\n    ref: fref\n  }, props));\n  // Otherwise a plain canvas-view\n  else return /*#__PURE__*/React.createElement(CanvasView, _extends({\n    ref: fref\n  }, props));\n});\nView.Port = () => /*#__PURE__*/React.createElement(tracked.Out, null);\n\nexport { View };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}