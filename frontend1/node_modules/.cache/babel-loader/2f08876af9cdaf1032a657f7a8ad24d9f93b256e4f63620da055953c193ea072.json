{"ast":null,"code":"var _jsxFileName = \"/Users/riley/Hack_NCState/frontend/src/components/Box.js\",\n  _s = $RefreshSig$();\n// import * as THREE from 'three';\n// import {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\n// import { useEffect, useRef } from \"react\";\n\n// function Box() {\n//   function loadTheModel(){\n//     const loader = new OBJLoader();\n//     loader.load(\n//       '../models/rat_obj.obj',\n//       ( object ) => { \n//         this.scene.add( object );\n//         const el = this.scene.getObjectByName(\"Box002\");\n//         el.position.set(0, -150,0 );\n//         el.material.color.set(0x50C878);\n//         el.rotation.x = 23.5;\n//         this.model = el;\n//       },\n//       undefined,\n//       ( error ) => {\n//         console.log( 'An error happened:' + error );\n//       }\n//     );\n//   };\n\n//   const refContainer = useRef(null);\n//   useEffect(() => {\n//     // === THREE.JS CODE START ===\n//     var scene = new THREE.Scene();\n//     var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n//     var renderer = new THREE.WebGLRenderer();\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n//     // document.body.appendChild( renderer.domElement );\n//     // use ref as a mount point of the Three.js scene instead of the document.body\n//     refContainer.current && refContainer.current.appendChild( renderer.domElement );\n//     // var geometry = new THREE.BoxGeometry(1, 1, 1);\n//     // var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n//     // var cube = new THREE.Mesh(geometry, material);\n//     // scene.add(cube);\n//     loadTheModel()\n//     camera.position.z = 5;\n//     var animate = function () {\n//       requestAnimationFrame(animate);\n//       cube.rotation.x += 0.01;\n//       cube.rotation.y += 0.01;\n//       renderer.render(scene, camera);\n//     };\n//     animate();\n//   }, []);\n//   return (\n//     <div ref={refContainer}></div>\n\n//   );\n// }\n\n// export default Box\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  height: 500 // we can control scene size by setting container dimensions\n};\nconst Box = () => {\n  _s();\n  const mount = useRef(null);\n  const [loadingPercentage, setLoadingPercentage] = useState(0);\n  const [isMounted, setIsMounted] = useState(true);\n  let scene, camera, renderer, controls, model, requestID;\n  useEffect(() => {\n    const sceneSetup = () => {\n      const width = mount.current.clientWidth;\n      const height = mount.current.clientHeight;\n      scene = new THREE.Scene();\n      camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n      camera.position.z = 500;\n      controls = new OrbitControls(camera, mount.current);\n      renderer = new THREE.WebGLRenderer();\n      renderer.setSize(width, height);\n      mount.current.appendChild(renderer.domElement);\n    };\n    const loadTheModel = () => {\n      const loader = new OBJLoader();\n      loader.load('../models/rat_obj.obj', object => {\n        scene.add(object);\n        const el = scene.getObjectByName(\"Box002\");\n        el.position.set(0, -150, 0);\n        el.material.color.set(0x50C878);\n        el.rotation.x = 23.5;\n        model = el;\n      }, xhr => {\n        setLoadingPercentage(xhr.loaded / xhr.total * 100);\n      }, error => {\n        console.error('An error happened:', error);\n      });\n    };\n    const addLights = () => {\n      const lights = [];\n      lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n      lights[0].position.set(0, 2000, 0);\n      lights[1].position.set(1000, 2000, 1000);\n      lights[2].position.set(-1000, -2000, -1000);\n      scene.add(lights[0]);\n      scene.add(lights[1]);\n      scene.add(lights[2]);\n    };\n    const startAnimationLoop = () => {\n      if (model) model.rotation.z += 0.005;\n      renderer.render(scene, camera);\n      requestID = window.requestAnimationFrame(startAnimationLoop);\n    };\n    const handleWindowResize = () => {\n      const width = mount.current.clientWidth;\n      const height = mount.current.clientHeight;\n      renderer.setSize(width, height);\n      camera.aspect = width / height;\n      camera.updateProjectionMatrix();\n    };\n    sceneSetup();\n    addLights();\n    loadTheModel();\n    startAnimationLoop();\n    window.addEventListener('resize', handleWindowResize);\n    return () => {\n      window.removeEventListener('resize', handleWindowResize);\n      window.cancelAnimationFrame(requestID);\n      controls.dispose();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: style,\n      ref: mount\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setIsMounted(!isMounted),\n        children: isMounted ? \"Unmount\" : \"Mount\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), isMounted && loadingPercentage === 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Scroll to zoom, drag to rotate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 60\n      }, this), isMounted && loadingPercentage !== 100 && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Loading Model: \", loadingPercentage, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 60\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(Box, \"tKC0s9SDDMgiW78XrI+slTrdKE0=\");\n_c = Box;\nexport default Box;\nvar _c;\n$RefreshReg$(_c, \"Box\");","map":{"version":3,"names":["React","useEffect","useRef","useState","THREE","OrbitControls","OBJLoader","jsxDEV","_jsxDEV","Fragment","_Fragment","style","height","Box","_s","mount","loadingPercentage","setLoadingPercentage","isMounted","setIsMounted","scene","camera","renderer","controls","model","requestID","sceneSetup","width","current","clientWidth","clientHeight","Scene","PerspectiveCamera","position","z","WebGLRenderer","setSize","appendChild","domElement","loadTheModel","loader","load","object","add","el","getObjectByName","set","material","color","rotation","x","xhr","loaded","total","error","console","addLights","lights","PointLight","startAnimationLoop","render","window","requestAnimationFrame","handleWindowResize","aspect","updateProjectionMatrix","addEventListener","removeEventListener","cancelAnimationFrame","dispose","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/riley/Hack_NCState/frontend/src/components/Box.js"],"sourcesContent":["// import * as THREE from 'three';\n// import {OBJLoader} from \"three/examples/jsm/loaders/OBJLoader\";\n// import { useEffect, useRef } from \"react\";\n\n// function Box() {\n//   function loadTheModel(){\n//     const loader = new OBJLoader();\n//     loader.load(\n//       '../models/rat_obj.obj',\n//       ( object ) => { \n//         this.scene.add( object );\n//         const el = this.scene.getObjectByName(\"Box002\");\n//         el.position.set(0, -150,0 );\n//         el.material.color.set(0x50C878);\n//         el.rotation.x = 23.5;\n//         this.model = el;\n//       },\n//       undefined,\n//       ( error ) => {\n//         console.log( 'An error happened:' + error );\n//       }\n//     );\n//   };\n\n\n\n\n\n\n//   const refContainer = useRef(null);\n//   useEffect(() => {\n//     // === THREE.JS CODE START ===\n//     var scene = new THREE.Scene();\n//     var camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);\n//     var renderer = new THREE.WebGLRenderer();\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n//     // document.body.appendChild( renderer.domElement );\n//     // use ref as a mount point of the Three.js scene instead of the document.body\n//     refContainer.current && refContainer.current.appendChild( renderer.domElement );\n//     // var geometry = new THREE.BoxGeometry(1, 1, 1);\n//     // var material = new THREE.MeshBasicMaterial({ color: 0x00ff00 });\n//     // var cube = new THREE.Mesh(geometry, material);\n//     // scene.add(cube);\n//     loadTheModel()\n//     camera.position.z = 5;\n//     var animate = function () {\n//       requestAnimationFrame(animate);\n//       cube.rotation.x += 0.01;\n//       cube.rotation.y += 0.01;\n//       renderer.render(scene, camera);\n//     };\n//     animate();\n//   }, []);\n//   return (\n//     <div ref={refContainer}></div>\n\n//   );\n// }\n\n// export default Box\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport * as THREE from 'three';\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\nimport { OBJLoader } from \"three/examples/jsm/loaders/OBJLoader\";\n\nconst style = {\n    height: 500 // we can control scene size by setting container dimensions\n};\n\nconst Box = () => {\n    const mount = useRef(null);\n    const [loadingPercentage, setLoadingPercentage] = useState(0);\n    const [isMounted, setIsMounted] = useState(true);\n    let scene, camera, renderer, controls, model, requestID;\n\n    useEffect(() => {\n        const sceneSetup = () => {\n            const width = mount.current.clientWidth;\n            const height = mount.current.clientHeight;\n\n            scene = new THREE.Scene();\n            camera = new THREE.PerspectiveCamera(75, width / height, 0.1, 1000);\n            camera.position.z = 500;\n            controls = new OrbitControls(camera, mount.current);\n            renderer = new THREE.WebGLRenderer();\n            renderer.setSize(width, height);\n            mount.current.appendChild(renderer.domElement);\n        };\n\n        const loadTheModel = () => {\n            const loader = new OBJLoader();\n\n            loader.load(\n                '../models/rat_obj.obj',\n                (object) => {\n                    scene.add(object);\n\n                    const el = scene.getObjectByName(\"Box002\");\n                    el.position.set(0, -150, 0);\n                    el.material.color.set(0x50C878);\n                    el.rotation.x = 23.5;\n\n                    model = el;\n                },\n                (xhr) => {\n                    setLoadingPercentage((xhr.loaded / xhr.total) * 100);\n                },\n                (error) => {\n                    console.error('An error happened:', error);\n                }\n            );\n        };\n\n        const addLights = () => {\n            const lights = [];\n\n            lights[0] = new THREE.PointLight(0xffffff, 1, 0);\n            lights[1] = new THREE.PointLight(0xffffff, 1, 0);\n            lights[2] = new THREE.PointLight(0xffffff, 1, 0);\n\n            lights[0].position.set(0, 2000, 0);\n            lights[1].position.set(1000, 2000, 1000);\n            lights[2].position.set(-1000, -2000, -1000);\n\n            scene.add(lights[0]);\n            scene.add(lights[1]);\n            scene.add(lights[2]);\n        };\n\n        const startAnimationLoop = () => {\n            if (model) model.rotation.z += 0.005;\n\n            renderer.render(scene, camera);\n            requestID = window.requestAnimationFrame(startAnimationLoop);\n        };\n\n        const handleWindowResize = () => {\n            const width = mount.current.clientWidth;\n            const height = mount.current.clientHeight;\n\n            renderer.setSize(width, height);\n            camera.aspect = width / height;\n            camera.updateProjectionMatrix();\n        };\n\n        sceneSetup();\n        addLights();\n        loadTheModel();\n        startAnimationLoop();\n        window.addEventListener('resize', handleWindowResize);\n\n        return () => {\n            window.removeEventListener('resize', handleWindowResize);\n            window.cancelAnimationFrame(requestID);\n            controls.dispose();\n        };\n    }, []);\n\n    return (\n        <>\n            <div style={style} ref={mount} />\n            <div>\n                <button onClick={() => setIsMounted(!isMounted)}>\n                    {isMounted ? \"Unmount\" : \"Mount\"}\n                </button>\n                {isMounted && loadingPercentage === 100 && <div>Scroll to zoom, drag to rotate</div>}\n                {isMounted && loadingPercentage !== 100 && <div>Loading Model: {loadingPercentage}%</div>}\n            </div>\n        </>\n    );\n};\n\nexport default Box;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}