{"ast":null,"code":"var _jsxFileName = \"/Users/riley/Hack_NCState/frontend/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../CSS/Settings.css';\n\n//how many rats (+ int), how much food (+ int), (1 sliders per 5 brain regions diagram of brain) simulate button\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Settings() {\n  _s();\n  const [firstCount, setFirstCount] = useState(1); // Initial value of the slider\n\n  const handleSliderChange = event => {\n    setFirstCount(parseInt(event.target.value)); // Update the state with the new value\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slidecontainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"1\",\n      max: \"5\",\n      value: firstCount // Value from state\n      ,\n      className: \"slider\",\n      id: \"myRange\",\n      onChange: handleSliderChange // Handle value change\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Value: \", firstCount]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n_s(Settings, \"luSiypQQsKpwlAV/E8zFRunHkgY=\");\n_c = Settings;\nexport default Settings;\n\n/*\n    import React, { useState, useEffect } from 'react';\nimport '../CSS/Settings.css'\n\nfunction Settings(props){\n    const [firstCount, setCount] = React.useState(0)\n  \n    const increment = () => {\n        setCount(firstCount + 1);\n    };\n\n    const decrement = () => {\n        setCount(firstCount - 1);\n    };\n\n    return (\n    <>\n        <div class = \"settings-modal\">\n            <h3>Settings</h3>\n            <div class=\"setting-one\"> \n                <h2>Counter: {firstCount}</h2>\n                <button onClick={increment}>+</button>\n                <button onClick={decrement}>-</button>\n            </div>\n        </div>\n\n    </>\n    );\n}\n\nexport default Settings;\n*/\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Settings","_s","firstCount","setFirstCount","handleSliderChange","event","parseInt","target","value","className","children","type","min","max","id","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/riley/Hack_NCState/frontend/src/components/Settings.js"],"sourcesContent":["import React, { useState } from 'react';\nimport '../CSS/Settings.css';\n\n//how many rats (+ int), how much food (+ int), (1 sliders per 5 brain regions diagram of brain) simulate button\n\nfunction Settings() {\n    const [firstCount, setFirstCount] = useState(1); // Initial value of the slider\n\n    const handleSliderChange = (event) => {\n        setFirstCount(parseInt(event.target.value)); // Update the state with the new value\n    };\n\n    return (\n        <div className=\"slidecontainer\">\n            <input\n                type=\"range\"\n                min=\"1\"\n                max=\"5\"\n                value={firstCount} // Value from state\n                className=\"slider\"\n                id=\"myRange\"\n                onChange={handleSliderChange} // Handle value change\n            />\n            <p>Value: {firstCount}</p> {/* Display the current value of the slider */}\n        </div>\n    );\n}\n\nexport default Settings;\n\n/*\n    import React, { useState, useEffect } from 'react';\nimport '../CSS/Settings.css'\n\nfunction Settings(props){\n    const [firstCount, setCount] = React.useState(0)\n  \n    const increment = () => {\n        setCount(firstCount + 1);\n    };\n\n    const decrement = () => {\n        setCount(firstCount - 1);\n    };\n\n    return (\n    <>\n        <div class = \"settings-modal\">\n            <h3>Settings</h3>\n            <div class=\"setting-one\"> \n                <h2>Counter: {firstCount}</h2>\n                <button onClick={increment}>+</button>\n                <button onClick={decrement}>-</button>\n            </div>\n        </div>\n\n    </>\n    );\n}\n\nexport default Settings;\n*/"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,qBAAqB;;AAE5B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAEjD,MAAMO,kBAAkB,GAAIC,KAAK,IAAK;IAClCF,aAAa,CAACG,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EACjD,CAAC;EAED,oBACIT,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BX,OAAA;MACIY,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,GAAG;MACPL,KAAK,EAAEN,UAAW,CAAC;MAAA;MACnBO,SAAS,EAAC,QAAQ;MAClBK,EAAE,EAAC,SAAS;MACZC,QAAQ,EAAEX,kBAAmB,CAAC;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,eACFpB,OAAA;MAAAW,QAAA,GAAG,SAAO,EAACR,UAAU;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1B,CAAC;AAEd;AAAClB,EAAA,CArBQD,QAAQ;AAAAoB,EAAA,GAARpB,QAAQ;AAuBjB,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA/BA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}