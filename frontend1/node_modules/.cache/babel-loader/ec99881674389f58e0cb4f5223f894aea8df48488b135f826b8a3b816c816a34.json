{"ast":null,"code":"import { ImageUtils } from '../extras/ImageUtils.js';\nimport * as MathUtils from '../math/MathUtils.js';\nlet _sourceId = 0;\nclass Source {\n  constructor(data = null) {\n    this.isSource = true;\n    Object.defineProperty(this, 'id', {\n      value: _sourceId++\n    });\n    this.uuid = MathUtils.generateUUID();\n    this.data = data;\n    this.dataReady = true;\n    this.version = 0;\n  }\n  set needsUpdate(value) {\n    if (value === true) this.version++;\n  }\n  toJSON(meta) {\n    const isRootObject = meta === undefined || typeof meta === 'string';\n    if (!isRootObject && meta.images[this.uuid] !== undefined) {\n      return meta.images[this.uuid];\n    }\n    const output = {\n      uuid: this.uuid,\n      url: ''\n    };\n    const data = this.data;\n    if (data !== null) {\n      let url;\n      if (Array.isArray(data)) {\n        // cube texture\n\n        url = [];\n        for (let i = 0, l = data.length; i < l; i++) {\n          if (data[i].isDataTexture) {\n            url.push(serializeImage(data[i].image));\n          } else {\n            url.push(serializeImage(data[i]));\n          }\n        }\n      } else {\n        // texture\n\n        url = serializeImage(data);\n      }\n      output.url = url;\n    }\n    if (!isRootObject) {\n      meta.images[this.uuid] = output;\n    }\n    return output;\n  }\n}\nfunction serializeImage(image) {\n  if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n    // default images\n\n    return ImageUtils.getDataURL(image);\n  } else {\n    if (image.data) {\n      // images of DataTexture\n\n      return {\n        data: Array.from(image.data),\n        width: image.width,\n        height: image.height,\n        type: image.data.constructor.name\n      };\n    } else {\n      console.warn('THREE.Texture: Unable to serialize Texture.');\n      return {};\n    }\n  }\n}\nexport { Source };","map":{"version":3,"names":["ImageUtils","MathUtils","_sourceId","Source","constructor","data","isSource","Object","defineProperty","value","uuid","generateUUID","dataReady","version","needsUpdate","toJSON","meta","isRootObject","undefined","images","output","url","Array","isArray","i","l","length","isDataTexture","push","serializeImage","image","HTMLImageElement","HTMLCanvasElement","ImageBitmap","getDataURL","from","width","height","type","name","console","warn"],"sources":["/Users/riley/Hack_NCState/frontend/node_modules/three/src/textures/Source.js"],"sourcesContent":["import { ImageUtils } from '../extras/ImageUtils.js';\nimport * as MathUtils from '../math/MathUtils.js';\n\nlet _sourceId = 0;\n\nclass Source {\n\n\tconstructor( data = null ) {\n\n\t\tthis.isSource = true;\n\n\t\tObject.defineProperty( this, 'id', { value: _sourceId ++ } );\n\n\t\tthis.uuid = MathUtils.generateUUID();\n\n\t\tthis.data = data;\n\t\tthis.dataReady = true;\n\n\t\tthis.version = 0;\n\n\t}\n\n\tset needsUpdate( value ) {\n\n\t\tif ( value === true ) this.version ++;\n\n\t}\n\n\ttoJSON( meta ) {\n\n\t\tconst isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\tif ( ! isRootObject && meta.images[ this.uuid ] !== undefined ) {\n\n\t\t\treturn meta.images[ this.uuid ];\n\n\t\t}\n\n\t\tconst output = {\n\t\t\tuuid: this.uuid,\n\t\t\turl: ''\n\t\t};\n\n\t\tconst data = this.data;\n\n\t\tif ( data !== null ) {\n\n\t\t\tlet url;\n\n\t\t\tif ( Array.isArray( data ) ) {\n\n\t\t\t\t// cube texture\n\n\t\t\t\turl = [];\n\n\t\t\t\tfor ( let i = 0, l = data.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( data[ i ].isDataTexture ) {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ].image ) );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\turl.push( serializeImage( data[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// texture\n\n\t\t\t\turl = serializeImage( data );\n\n\t\t\t}\n\n\t\t\toutput.url = url;\n\n\t\t}\n\n\t\tif ( ! isRootObject ) {\n\n\t\t\tmeta.images[ this.uuid ] = output;\n\n\t\t}\n\n\t\treturn output;\n\n\t}\n\n}\n\nfunction serializeImage( image ) {\n\n\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t// default images\n\n\t\treturn ImageUtils.getDataURL( image );\n\n\t} else {\n\n\t\tif ( image.data ) {\n\n\t\t\t// images of DataTexture\n\n\t\t\treturn {\n\t\t\t\tdata: Array.from( image.data ),\n\t\t\t\twidth: image.width,\n\t\t\t\theight: image.height,\n\t\t\t\ttype: image.data.constructor.name\n\t\t\t};\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.Texture: Unable to serialize Texture.' );\n\t\t\treturn {};\n\n\t\t}\n\n\t}\n\n}\n\nexport { Source };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}